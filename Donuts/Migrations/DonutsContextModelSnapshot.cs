// <auto-generated />
using System;
using Donuts.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Donuts.Migrations
{
    [DbContext(typeof(DonutsContext))]
    partial class DonutsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Donuts.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName");

                    b.Property<string>("Password");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerName")
                        .IsUnique()
                        .HasFilter("[CustomerName] IS NOT NULL");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Donuts.Models.Domain", b =>
                {
                    b.Property<int>("DomainId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("ExperiationDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("RegistrationDate");

                    b.HasKey("DomainId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Domain");
                });

            modelBuilder.Entity("Donuts.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CustomerId");

                    b.Property<int>("DomainId");

                    b.Property<DateTime?>("DueDate");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DomainId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Donuts.Models.Domain", b =>
                {
                    b.HasOne("Donuts.Models.Customer", "Customer")
                        .WithMany("Domains")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Donuts.Models.Payment", b =>
                {
                    b.HasOne("Donuts.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Donuts.Models.Domain", "Domain")
                        .WithMany()
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
